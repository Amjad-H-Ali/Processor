------------------------------- MODULE model -------------------------------
EXTENDS Integers, Naturals, Sequences, TLC, TLAPS

CONSTANT N

ASSUME NNAT == N \in Nat

CONSTANTS MEM_LENGTH, MEM_WIDTH
VARIABLE MEM


MEMORY == [0 .. (MEM_LENGTH) -> [0 .. (MEM_WIDTH) -> {TRUE,FALSE}]]

\* Init == MEM = [0 .. (MEM_LENGTH) |-> [0 .. (MEM_WIDTH) |-> FALSE]]

\* TypeInvariant == MEM \in MEMORY

BVN == [0..N -> {TRUE,FALSE}]

BV32 == [0..31 -> {TRUE,FALSE}]

BV64 == [0..63 -> {TRUE,FALSE}]

ANDN == [f \in BVN |-> [g \in BVN |-> [i \in 0..N |-> f[i] /\ g[i]]]]

AND32 == [f \in BV32 |-> [g \in BV32 |-> [i \in 0..31 |-> f[i] /\ g[i]]]]

AND64 == [f \in BV64 |-> [g \in BV64 |-> [i \in 0..63 |-> f[i] /\ g[i]]]]

ORN == [f \in BVN |-> [g \in BVN |-> [i \in 0..N |-> f[i] \/ g[i]]]]

OR32 == [f \in BV32 |-> [g \in BV32 |-> [i \in 0..31 |-> f[i] \/ g[i]]]]

OR64 == [f \in BV64 |-> [g \in BV64 |-> [i \in 0..63 |-> f[i] \/ g[i]]]]

EXPANDN == [b \in {TRUE,FALSE} |-> [i \in 0..N |-> b]]

EXPAND64 == [b \in {TRUE,FALSE} |-> [i \in 0..63 |-> b]]
                                                                                                                     
XORN == [f \in BVN |-> [g \in BVN |-> [i \in 0..N |-> ((f[i] /\ ~g[i]) \/ (~f[i] /\ g[i]))]]]

XOR64 == [f \in BV64 |-> [g \in BV64 |-> [i \in 0..63 |-> ((f[i] /\ ~g[i]) \/ (~f[i] /\ g[i]))]]]

CMP32 == [f \in BVN |-> [g \in BVN |->  
                                       ~XORN[f][g][0]  /\ ~XORN[f][g][1]  /\ ~XORN[f][g][2]  /\ 
                                       ~XORN[f][g][3]  /\ ~XORN[f][g][4]  /\ ~XORN[f][g][5]  /\ 
                                       ~XORN[f][g][6]  /\ ~XORN[f][g][7]  /\ ~XORN[f][g][8]  /\
                                       ~XORN[f][g][9]  /\ ~XORN[f][g][10] /\ ~XORN[f][g][11] /\
                                       ~XORN[f][g][12] /\ ~XORN[f][g][13] /\ ~XORN[f][g][14] /\
                                       ~XORN[f][g][15] /\ ~XORN[f][g][16] /\ ~XORN[f][g][17] /\
                                       ~XORN[f][g][18] /\ ~XORN[f][g][19] /\ ~XORN[f][g][20] /\
                                       ~XORN[f][g][21] /\ ~XORN[f][g][22] /\ ~XORN[f][g][23] /\
                                       ~XORN[f][g][24] /\ ~XORN[f][g][25] /\ ~XORN[f][g][26] /\
                                       ~XORN[f][g][27] /\ ~XORN[f][g][28] /\ ~XORN[f][g][29] /\
                                       ~XORN[f][g][30] /\ ~XORN[f][g][31] ]]
                                       
 
 CMP64 == [f \in BVN |-> [g \in BVN |->  
                                       ~XORN[f][g][0]  /\ ~XORN[f][g][1]  /\ ~XORN[f][g][2]  /\ 
                                       ~XORN[f][g][3]  /\ ~XORN[f][g][4]  /\ ~XORN[f][g][5]  /\ 
                                       ~XORN[f][g][6]  /\ ~XORN[f][g][7]  /\ ~XORN[f][g][8]  /\
                                       ~XORN[f][g][9]  /\ ~XORN[f][g][10] /\ ~XORN[f][g][11] /\
                                       ~XORN[f][g][12] /\ ~XORN[f][g][13] /\ ~XORN[f][g][14] /\
                                       ~XORN[f][g][15] /\ ~XORN[f][g][16] /\ ~XORN[f][g][17] /\
                                       ~XORN[f][g][18] /\ ~XORN[f][g][19] /\ ~XORN[f][g][20] /\
                                       ~XORN[f][g][21] /\ ~XORN[f][g][22] /\ ~XORN[f][g][23] /\
                                       ~XORN[f][g][24] /\ ~XORN[f][g][25] /\ ~XORN[f][g][26] /\
                                       ~XORN[f][g][27] /\ ~XORN[f][g][28] /\ ~XORN[f][g][29] /\
                                       ~XORN[f][g][30] /\ ~XORN[f][g][31] /\
                                       ~XORN[f][g][32] /\ ~XORN[f][g][33] /\ ~XORN[f][g][34] /\ 
                                       ~XORN[f][g][35] /\ ~XORN[f][g][36] /\ ~XORN[f][g][37] /\ 
                                       ~XORN[f][g][38] /\ ~XORN[f][g][39] /\ ~XORN[f][g][40] /\
                                       ~XORN[f][g][41] /\ ~XORN[f][g][42] /\ ~XORN[f][g][43] /\
                                       ~XORN[f][g][44] /\ ~XORN[f][g][45] /\ ~XORN[f][g][46] /\
                                       ~XORN[f][g][47] /\ ~XORN[f][g][48] /\ ~XORN[f][g][49] /\
                                       ~XORN[f][g][50] /\ ~XORN[f][g][51] /\ ~XORN[f][g][52] /\
                                       ~XORN[f][g][53] /\ ~XORN[f][g][54] /\ ~XORN[f][g][55] /\
                                       ~XORN[f][g][56] /\ ~XORN[f][g][57] /\ ~XORN[f][g][58] /\
                                       ~XORN[f][g][59] /\ ~XORN[f][g][60] /\ ~XORN[f][g][61] /\
                                       ~XORN[f][g][62] /\ ~XORN[f][g][63] ]]

CMP_EQ_LT_GT == [b0 \in {TRUE,FALSE} |-> [b1 \in {TRUE,FALSE} |-> 
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |-> 
        [i \in 0..2 |-> 
            ((i=0) /\ ((b0 /\ b1) \/ (~b0 /\ ~b1)) /\ eq) \/ 
            ((i=1) /\ ((~b0 /\ b1 /\ eq) \/ lt)) \/ 
            ((i=2) /\ ((b0 /\ ~b1 /\ eq) \/ gt))              ]]]]]]    

CMP_EQ_LT_GT_1 == [f \in BVN |-> [g \in BVN |-> [i \in 0..63 |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |->                                                
        CMP_EQ_LT_GT[f[i]][g[i]][eq][lt][gt]   
                                                ]]]]]]

CMP_EQ_LT_GT_2 == [f \in BVN |-> [g \in BVN |-> [i \in {x \in 0..62 : x%2=0} |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |->                                                
        CMP_EQ_LT_GT_1[f][g][i]
            [CMP_EQ_LT_GT_1[f][g][i+1][eq][lt][gt][0]]
            [CMP_EQ_LT_GT_1[f][g][i+1][eq][lt][gt][1]]
            [CMP_EQ_LT_GT_1[f][g][i+1][eq][lt][gt][2]]   ]]]]]]
    
                                                
CMP_EQ_LT_GT_3 == [f \in BVN |-> [g \in BVN |-> [i \in 0..61 |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |-> 
        CMP_EQ_LT_GT_1[f][g][i]
            [CMP_EQ_LT_GT_2[f][g][i+1][eq][lt][gt][0]]
            [CMP_EQ_LT_GT_2[f][g][i+1][eq][lt][gt][1]]
            [CMP_EQ_LT_GT_2[f][g][i+1][eq][lt][gt][2]]
                                                            ]]]]]]  
                                                                        
CMP_EQ_LT_GT_4 == [f \in BVN |-> [g \in BVN |-> [i \in {x \in 0..60 : x%4=0} |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |->                                                
        CMP_EQ_LT_GT_2[f][g][i]
            [CMP_EQ_LT_GT_2[f][g][i+2][eq][lt][gt][0]]
            [CMP_EQ_LT_GT_2[f][g][i+2][eq][lt][gt][1]]
            [CMP_EQ_LT_GT_2[f][g][i+2][eq][lt][gt][2]]   ]]]]]]  

CMP_EQ_LT_GT_8 == [f \in BVN |-> [g \in BVN |-> [i \in {0,8,16,24,32,40,48,56} |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |->                                                
        CMP_EQ_LT_GT_4[f][g][i]
            [CMP_EQ_LT_GT_4[f][g][i+4][eq][lt][gt][0]]
            [CMP_EQ_LT_GT_4[f][g][i+4][eq][lt][gt][1]]
            [CMP_EQ_LT_GT_4[f][g][i+4][eq][lt][gt][2]]   ]]]]]]     
                                                                              

CMP_EQ_LT_GT_16 == [f \in BVN |-> [g \in BVN |-> [i \in {0,16,32,48} |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |->                                                
        CMP_EQ_LT_GT_8[f][g][i]
            [CMP_EQ_LT_GT_8[f][g][i+8][eq][lt][gt][0]]
            [CMP_EQ_LT_GT_8[f][g][i+8][eq][lt][gt][1]]
            [CMP_EQ_LT_GT_8[f][g][i+8][eq][lt][gt][2]]   ]]]]]]
            
CMP_EQ_LT_GT_32 == [f \in BVN |-> [g \in BVN |-> [i \in {0,32} |->
    [eq \in {TRUE,FALSE} |-> [lt \in {TRUE,FALSE} |-> [gt \in {TRUE,FALSE} |->                                                
        CMP_EQ_LT_GT_16[f][g][i]
            [CMP_EQ_LT_GT_16[f][g][i+16][eq][lt][gt][0]]
            [CMP_EQ_LT_GT_16[f][g][i+16][eq][lt][gt][1]]
            [CMP_EQ_LT_GT_16[f][g][i+16][eq][lt][gt][2]]   ]]]]]]
            
b0 == [i \in 0..63 |-> FALSE]

b1 == [i \in 0..63 |-> (i=0)]

b2 == [i \in 0..63 |-> (i=1)]

b3 == [i \in 0..63 |-> (i=0) \/ (i=1)]

b4 == [i \in 0..63 |-> (i=2)]

b5 == [i \in 0..63 |-> (i=0) \/ (i=2)]

b6 == [i \in 0..63 |-> (i=1) \/ (i=2)]

b7 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2)]

b8 == [i \in 0..63 |-> (i=3)]

b9 == [i \in 0..63 |-> (i=0) \/ (i=3)]

b10 == [i \in 0..63 |-> (i=1) \/ (i=3)]

b11 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=3)]

b12 == [i \in 0..63 |-> (i=2) \/ (i=3)]

b13 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=3)]

b14 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=3)]

b15 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=3)]

b16 == [i \in 0..63 |-> (i=4)]

b17 == [i \in 0..63 |-> (i=0) \/ (i=4)]

b18 == [i \in 0..63 |-> (i=1) \/ (i=4)]

b19 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=4)]

b20 == [i \in 0..63 |-> (i=2) \/ (i=4)]

b21 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=4)]

b22 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=4)]

b23 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=4)]

b24 == [i \in 0..63 |-> (i=3) \/ (i=4)]

b25 == [i \in 0..63 |-> (i=0) \/ (i=3) \/ (i=4)]

b26 == [i \in 0..63 |-> (i=1) \/ (i=3) \/ (i=4)]

b27 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=3) \/ (i=4)]

b28 == [i \in 0..63 |-> (i=2) \/ (i=3) \/ (i=4)]

b29 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=3) \/ (i=4)]

b30 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=3) \/ (i=4)]

b31 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=3) \/ (i=4)]

b32 == [i \in 0..63 |-> (i=5)]

b33 == [i \in 0..63 |-> (i=0) \/ (i=5)]

b34 == [i \in 0..63 |-> (i=1) \/ (i=5)]

b35 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=5)]

b36 == [i \in 0..63 |-> (i=2) \/ (i=5)]

b37 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=5)]

b38 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=5)]

b39 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=5)]

b40 == [i \in 0..63 |-> (i=3) \/ (i=5)]

b41 == [i \in 0..63 |-> (i=0) \/ (i=3) \/ (i=5)]

b42 == [i \in 0..63 |-> (i=1) \/ (i=3) \/ (i=5)]

b43 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=3) \/ (i=5)]

b44 == [i \in 0..63 |-> (i=2) \/ (i=3) \/ (i=5)]

b45 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=3) \/ (i=5)]

b46 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=3) \/ (i=5)]

b47 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=3) \/ (i=5)]

b48 == [i \in 0..63 |-> (i=4) \/ (i=5)]

b49 == [i \in 0..63 |-> (i=0) \/ (i=4) \/ (i=5)]

b50 == [i \in 0..63 |-> (i=1) \/ (i=4) \/ (i=5)]

b51 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=4) \/ (i=5)]

b52 == [i \in 0..63 |-> (i=2) \/ (i=4) \/ (i=5)]

b53 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=4) \/ (i=5)]

b54 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=4) \/ (i=5)]

b55 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=4) \/ (i=5)]

b56 == [i \in 0..63 |-> (i=3) \/ (i=4) \/ (i=5)]

b57 == [i \in 0..63 |-> (i=0) \/ (i=3) \/ (i=4) \/ (i=5)]

b58 == [i \in 0..63 |-> (i=1) \/ (i=3) \/ (i=4) \/ (i=5)]

b59 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=3) \/ (i=4) \/ (i=5)]

b60 == [i \in 0..63 |-> (i=2) \/ (i=3) \/ (i=4) \/ (i=5)]

b61 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=3) \/ (i=4) \/ (i=5)]

b62 == [i \in 0..63 |-> (i=1) \/ (i=2) \/ (i=3) \/ (i=4) \/ (i=5)]

b63 == [i \in 0..63 |-> (i=0) \/ (i=1) \/ (i=2) \/ (i=3) \/ (i=4) \/ (i=5)]

b69 == [i \in 0..63 |-> (i=0) \/ (i=2) \/ (i=6)]

b128 == [i \in 0..63 |-> (i=7)]

b192 == [i \in 0..63 |-> (i=6) \/ (i=7)]

b194 == [i \in 0..63 |-> (i=1) \/ (i=6) \/ (i=7)]


BIN == [b \in {TRUE,FALSE} |-> IF b THEN 1 ELSE 0]
BIN32 == [f \in BV32 |-> BIN[f[0]]*2^0 + BIN[f[1]]*2^1 + BIN[f[2]]*2^2 + BIN[f[3]]*2^3 + BIN[f[4]]*2^4 + BIN[f[5]]*2^5 + BIN[f[6]]*2^6 + BIN[f[7]]*2^7 + BIN[f[8]]*2^8 + BIN[f[9]]*2^9 + BIN[f[10]]*2^10 + BIN[f[11]]*2^11 + BIN[f[12]]*2^12 + BIN[f[13]]*2^13 + BIN[f[14]]*2^14 + BIN[f[15]]*2^15 + BIN[f[16]]*2^16 + BIN[f[17]]*2^17 + BIN[f[18]]*2^18 + BIN[f[19]]*2^19 + BIN[f[20]]*2^20 + BIN[f[21]]*2^21 + BIN[f[22]]*2^22 + BIN[f[23]]*2^23 + BIN[f[24]]*2^24 + BIN[f[25]]*2^25 + BIN[f[26]]*2^26 + BIN[f[27]]*2^27 + BIN[f[28]]*2^28 + BIN[f[29]]*2^29 + BIN[f[30]]*2^30]


SLR32 == [f \in BV32 |-> [g \in BV32 |-> [i \in 0..31 |->
            
           (CMP32[AND32[f][b31]][b31] /\
            (i=0) /\ g[31]
           ) \/ 
           (CMP32[AND32[f][b31]][b30] /\
            ( ((i=0) /\ g[30]) \/ ((i=1) /\ g[31]) ) 
           ) \/ 
           (CMP32[AND32[f][b31]][b29] /\
            ( ((i=0) /\ g[29]) \/ ((i=1) /\ g[30]) \/ ((i=2) /\ g[31]) ) 
           ) \/
           (CMP32[AND32[f][b31]][b28] /\
            ( ((i=0) /\ g[28]) \/ ((i=1) /\ g[29]) \/ ((i=2) /\ g[30]) \/ ((i=3) /\ g[31]) ) 
           ) \/
           (CMP32[AND32[f][b31]][b27] /\
            ( ((i=0) /\ g[27]) \/ ((i=1) /\ g[28]) \/ ((i=2) /\ g[29]) \/ ((i=3) /\ g[30]) \/ ((i=4) /\ g[31]) ) 
           ) \/
           (CMP32[AND32[f][b31]][b26] /\
            ( ((i=0) /\ g[26]) \/ ((i=1) /\ g[27]) \/ ((i=2) /\ g[28]) \/ ((i=3) /\ g[29]) \/ ((i=4) /\ g[30]) \/ ((i=5) /\ g[31])  ) 
           ) \/
           (CMP32[AND32[f][b31]][b25] /\
            ( ((i=0) /\ g[25]) \/ ((i=1) /\ g[26]) \/ ((i=2) /\ g[27]) \/ ((i=3) /\ g[28]) \/ ((i=4) /\ g[29]) \/ ((i=5) /\ g[30])  \/ ((i=6) /\ g[31]) ) 
           ) \/
           (CMP32[AND32[f][b31]][b24] /\
            ( ((i=0) /\ g[24]) \/ ((i=1) /\ g[25]) \/ ((i=2) /\ g[26]) \/ ((i=3) /\ g[27]) \/ ((i=4) /\ g[28]) \/ ((i=5) /\ g[29])  \/ ((i=6) /\ g[30])  \/ ((i=7) /\ g[31]) ) 
           ) \/
           (CMP32[AND32[f][b31]][b23] /\
            ( ((i=0) /\ g[23]) \/ ((i=1) /\ g[24]) \/ ((i=2) /\ g[25]) \/ ((i=3) /\ g[26]) \/ ((i=4) /\ g[27]) \/ ((i=5) /\ g[28])  \/ ((i=6) /\ g[29])  \/ ((i=7) /\ g[30])  \/ ((i=8) /\ g[31]) ) 
           ) \/    
           (CMP32[AND32[f][b31]][b22] /\
            ( ((i=0) /\ g[22]) \/ ((i=1) /\ g[23]) \/ ((i=2) /\ g[24]) \/ ((i=3) /\ g[25]) \/ ((i=4) /\ g[26]) \/ ((i=5) /\ g[27])  \/ ((i=6) /\ g[28])  \/ ((i=7) /\ g[29])  \/ ((i=8) /\ g[30])  \/ ((i=9) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b21] /\
            ( ((i=0) /\ g[21]) \/ ((i=1) /\ g[22]) \/ ((i=2) /\ g[23]) \/ ((i=3) /\ g[24]) \/ ((i=4) /\ g[25]) \/ ((i=5) /\ g[26])  \/ ((i=6) /\ g[27])  \/ ((i=7) /\ g[28])  \/ ((i=8) /\ g[29])  \/ ((i=9) /\ g[30])  \/ ((i=10) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b20] /\
            ( ((i=0) /\ g[20]) \/ ((i=1) /\ g[21]) \/ ((i=2) /\ g[22]) \/ ((i=3) /\ g[23]) \/ ((i=4) /\ g[24]) \/ ((i=5) /\ g[25])  \/ ((i=6) /\ g[26])  \/ ((i=7) /\ g[27])  \/ ((i=8) /\ g[28])  \/ ((i=9) /\ g[29])  \/ ((i=10) /\ g[30])  \/ ((i=11) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b19] /\
            ( ((i=0) /\ g[19]) \/ ((i=1) /\ g[20]) \/ ((i=2) /\ g[21]) \/ ((i=3) /\ g[22]) \/ ((i=4) /\ g[23]) \/ ((i=5) /\ g[24])  \/ ((i=6) /\ g[25])  \/ ((i=7) /\ g[26])  \/ ((i=8) /\ g[27])  \/ ((i=9) /\ g[28])  \/ ((i=10) /\ g[29])  \/ ((i=11) /\ g[30])  \/ ((i=12) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b18] /\
            ( ((i=0) /\ g[18]) \/ ((i=1) /\ g[19]) \/ ((i=2) /\ g[20]) \/ ((i=3) /\ g[21]) \/ ((i=4) /\ g[22]) \/ ((i=5) /\ g[23])  \/ ((i=6) /\ g[24])  \/ ((i=7) /\ g[25])  \/ ((i=8) /\ g[26])  \/ ((i=9) /\ g[27])  \/ ((i=10) /\ g[28])  \/ ((i=11) /\ g[29])  \/ ((i=12) /\ g[30])  \/ ((i=13) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b17] /\
            ( ((i=0) /\ g[17]) \/ ((i=1) /\ g[18]) \/ ((i=2) /\ g[19]) \/ ((i=3) /\ g[20]) \/ ((i=4) /\ g[21]) \/ ((i=5) /\ g[22])  \/ ((i=6) /\ g[23])  \/ ((i=7) /\ g[24])  \/ ((i=8) /\ g[25])  \/ ((i=9) /\ g[26])  \/ ((i=10) /\ g[27])  \/ ((i=11) /\ g[28])  \/ ((i=12) /\ g[29])  \/ ((i=13) /\ g[30])  \/ ((i=14) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b16] /\
            ( ((i=0) /\ g[16]) \/ ((i=1) /\ g[17]) \/ ((i=2) /\ g[18]) \/ ((i=3) /\ g[19]) \/ ((i=4) /\ g[20]) \/ ((i=5) /\ g[21])  \/ ((i=6) /\ g[22])  \/ ((i=7) /\ g[23])  \/ ((i=8) /\ g[24])  \/ ((i=9) /\ g[25])  \/ ((i=10) /\ g[26])  \/ ((i=11) /\ g[27])  \/ ((i=12) /\ g[28])  \/ ((i=13) /\ g[29])  \/ ((i=14) /\ g[30])  \/ ((i=15) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b15] /\
            ( ((i=0) /\ g[15]) \/ ((i=1) /\ g[16]) \/ ((i=2) /\ g[17]) \/ ((i=3) /\ g[18]) \/ ((i=4) /\ g[19]) \/ ((i=5) /\ g[20])  \/ ((i=6) /\ g[21])  \/ ((i=7) /\ g[22])  \/ ((i=8) /\ g[23])  \/ ((i=9) /\ g[24])  \/ ((i=10) /\ g[25])  \/ ((i=11) /\ g[26])  \/ ((i=12) /\ g[27])  \/ ((i=13) /\ g[28])  \/ ((i=14) /\ g[29])  \/ ((i=15) /\ g[30])  \/ ((i=16) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b14] /\
            ( ((i=0) /\ g[14]) \/ ((i=1) /\ g[15]) \/ ((i=2) /\ g[16]) \/ ((i=3) /\ g[17]) \/ ((i=4) /\ g[18]) \/ ((i=5) /\ g[19])  \/ ((i=6) /\ g[20])  \/ ((i=7) /\ g[21])  \/ ((i=8) /\ g[22])  \/ ((i=9) /\ g[23])  \/ ((i=10) /\ g[24])  \/ ((i=11) /\ g[25])  \/ ((i=12) /\ g[26])  \/ ((i=13) /\ g[27])  \/ ((i=14) /\ g[28])  \/ ((i=15) /\ g[29])  \/ ((i=16) /\ g[30])  \/ ((i=17) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b13] /\
            ( ((i=0) /\ g[13]) \/ ((i=1) /\ g[14]) \/ ((i=2) /\ g[15]) \/ ((i=3) /\ g[16]) \/ ((i=4) /\ g[17]) \/ ((i=5) /\ g[18])  \/ ((i=6) /\ g[19])  \/ ((i=7) /\ g[20])  \/ ((i=8) /\ g[21])  \/ ((i=9) /\ g[22])  \/ ((i=10) /\ g[23])  \/ ((i=11) /\ g[24])  \/ ((i=12) /\ g[25])  \/ ((i=13) /\ g[26])  \/ ((i=14) /\ g[27])  \/ ((i=15) /\ g[28])  \/ ((i=16) /\ g[29])  \/ ((i=17) /\ g[30])  \/ ((i=18) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b12] /\
            ( ((i=0) /\ g[12]) \/ ((i=1) /\ g[13]) \/ ((i=2) /\ g[14]) \/ ((i=3) /\ g[15]) \/ ((i=4) /\ g[16]) \/ ((i=5) /\ g[17])  \/ ((i=6) /\ g[18])  \/ ((i=7) /\ g[19])  \/ ((i=8) /\ g[20])  \/ ((i=9) /\ g[21])  \/ ((i=10) /\ g[22])  \/ ((i=11) /\ g[23])  \/ ((i=12) /\ g[24])  \/ ((i=13) /\ g[25])  \/ ((i=14) /\ g[26])  \/ ((i=15) /\ g[27])  \/ ((i=16) /\ g[28])  \/ ((i=17) /\ g[29])  \/ ((i=18) /\ g[30])  \/ ((i=19) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b11] /\
            ( ((i=0) /\ g[11]) \/ ((i=1) /\ g[12]) \/ ((i=2) /\ g[13]) \/ ((i=3) /\ g[14]) \/ ((i=4) /\ g[15]) \/ ((i=5) /\ g[16])  \/ ((i=6) /\ g[17])  \/ ((i=7) /\ g[18])  \/ ((i=8) /\ g[19])  \/ ((i=9) /\ g[20])  \/ ((i=10) /\ g[21])  \/ ((i=11) /\ g[22])  \/ ((i=12) /\ g[23])  \/ ((i=13) /\ g[24])  \/ ((i=14) /\ g[25])  \/ ((i=15) /\ g[26])  \/ ((i=16) /\ g[27])  \/ ((i=17) /\ g[28])  \/ ((i=18) /\ g[29])  \/ ((i=19) /\ g[30])  \/ ((i=20) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b10] /\
            ( ((i=0) /\ g[10]) \/ ((i=1) /\ g[11]) \/ ((i=2) /\ g[12]) \/ ((i=3) /\ g[13]) \/ ((i=4) /\ g[14]) \/ ((i=5) /\ g[15])  \/ ((i=6) /\ g[16])  \/ ((i=7) /\ g[17])  \/ ((i=8) /\ g[18])  \/ ((i=9) /\ g[19])  \/ ((i=10) /\ g[20])  \/ ((i=11) /\ g[21])  \/ ((i=12) /\ g[22])  \/ ((i=13) /\ g[23])  \/ ((i=14) /\ g[24])  \/ ((i=15) /\ g[25])  \/ ((i=16) /\ g[26])  \/ ((i=17) /\ g[27])  \/ ((i=18) /\ g[28])  \/ ((i=19) /\ g[29])  \/ ((i=20) /\ g[30])  \/ ((i=21) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b9] /\
            ( ((i=0) /\ g[9]) \/ ((i=1) /\ g[10]) \/ ((i=2) /\ g[11]) \/ ((i=3) /\ g[12]) \/ ((i=4) /\ g[13]) \/ ((i=5) /\ g[14])  \/ ((i=6) /\ g[15])  \/ ((i=7) /\ g[16])  \/ ((i=8) /\ g[17])  \/ ((i=9) /\ g[18])  \/ ((i=10) /\ g[19])  \/ ((i=11) /\ g[20])  \/ ((i=12) /\ g[21])  \/ ((i=13) /\ g[22])  \/ ((i=14) /\ g[23])  \/ ((i=15) /\ g[24])  \/ ((i=16) /\ g[25])  \/ ((i=17) /\ g[26])  \/ ((i=18) /\ g[27])  \/ ((i=19) /\ g[28])  \/ ((i=20) /\ g[29])  \/ ((i=21) /\ g[30])  \/ ((i=22) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b8] /\
            ( ((i=0) /\ g[8]) \/ ((i=1) /\ g[9]) \/ ((i=2) /\ g[10]) \/ ((i=3) /\ g[11]) \/ ((i=4) /\ g[12]) \/ ((i=5) /\ g[13])  \/ ((i=6) /\ g[14])  \/ ((i=7) /\ g[15])  \/ ((i=8) /\ g[16])  \/ ((i=9) /\ g[17])  \/ ((i=10) /\ g[18])  \/ ((i=11) /\ g[19])  \/ ((i=12) /\ g[20])  \/ ((i=13) /\ g[21])  \/ ((i=14) /\ g[22])  \/ ((i=15) /\ g[23])  \/ ((i=16) /\ g[24])  \/ ((i=17) /\ g[25])  \/ ((i=18) /\ g[26])  \/ ((i=19) /\ g[27])  \/ ((i=20) /\ g[28])  \/ ((i=21) /\ g[29])  \/ ((i=22) /\ g[30])  \/ ((i=23) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b7] /\
            ( ((i=0) /\ g[7]) \/ ((i=1) /\ g[8]) \/ ((i=2) /\ g[9]) \/ ((i=3) /\ g[10]) \/ ((i=4) /\ g[11]) \/ ((i=5) /\ g[12])  \/ ((i=6) /\ g[13])  \/ ((i=7) /\ g[14])  \/ ((i=8) /\ g[15])  \/ ((i=9) /\ g[16])  \/ ((i=10) /\ g[17])  \/ ((i=11) /\ g[18])  \/ ((i=12) /\ g[19])  \/ ((i=13) /\ g[20])  \/ ((i=14) /\ g[21])  \/ ((i=15) /\ g[22])  \/ ((i=16) /\ g[23])  \/ ((i=17) /\ g[24])  \/ ((i=18) /\ g[25])  \/ ((i=19) /\ g[26])  \/ ((i=20) /\ g[27])  \/ ((i=21) /\ g[28])  \/ ((i=22) /\ g[29])  \/ ((i=23) /\ g[30])  \/ ((i=24) /\ g[31]) )
           ) \/               
           (CMP32[AND32[f][b31]][b6] /\
            ( ((i=0) /\ g[6]) \/ ((i=1) /\ g[7]) \/ ((i=2) /\ g[8]) \/ ((i=3) /\ g[9]) \/ ((i=4) /\ g[10]) \/ ((i=5) /\ g[11])  \/ ((i=6) /\ g[12])  \/ ((i=7) /\ g[13])  \/ ((i=8) /\ g[14])  \/ ((i=9) /\ g[15])  \/ ((i=10) /\ g[16])  \/ ((i=11) /\ g[17])  \/ ((i=12) /\ g[18])  \/ ((i=13) /\ g[19])  \/ ((i=14) /\ g[20])  \/ ((i=15) /\ g[21])  \/ ((i=16) /\ g[22])  \/ ((i=17) /\ g[23])  \/ ((i=18) /\ g[24])  \/ ((i=19) /\ g[25])  \/ ((i=20) /\ g[26])  \/ ((i=21) /\ g[27])  \/ ((i=22) /\ g[28])  \/ ((i=23) /\ g[29])  \/ ((i=24) /\ g[30])  \/ ((i=25) /\ g[31]) )
           ) \/ 
           (CMP32[AND32[f][b31]][b5] /\
            ( ((i=0) /\ g[5]) \/ ((i=1) /\ g[6]) \/ ((i=2) /\ g[7]) \/ ((i=3) /\ g[8]) \/ ((i=4) /\ g[9]) \/ ((i=5) /\ g[10])  \/ ((i=6) /\ g[11])  \/ ((i=7) /\ g[12])  \/ ((i=8) /\ g[13])  \/ ((i=9) /\ g[14])  \/ ((i=10) /\ g[15])  \/ ((i=11) /\ g[16])  \/ ((i=12) /\ g[17])  \/ ((i=13) /\ g[18])  \/ ((i=14) /\ g[19])  \/ ((i=15) /\ g[20])  \/ ((i=16) /\ g[21])  \/ ((i=17) /\ g[22])  \/ ((i=18) /\ g[23])  \/ ((i=19) /\ g[24])  \/ ((i=20) /\ g[25])  \/ ((i=21) /\ g[26])  \/ ((i=22) /\ g[27])  \/ ((i=23) /\ g[28])  \/ ((i=24) /\ g[29])  \/ ((i=25) /\ g[30])  \/ ((i=26) /\ g[31]) )
           ) \/ 
           (CMP32[AND32[f][b31]][b4] /\
            ( ((i=0) /\ g[4]) \/ ((i=1) /\ g[5]) \/ ((i=2) /\ g[6]) \/ ((i=3) /\ g[7]) \/ ((i=4) /\ g[8]) \/ ((i=5) /\ g[9])  \/ ((i=6) /\ g[10])  \/ ((i=7) /\ g[11])  \/ ((i=8) /\ g[12])  \/ ((i=9) /\ g[13])  \/ ((i=10) /\ g[14])  \/ ((i=11) /\ g[15])  \/ ((i=12) /\ g[16])  \/ ((i=13) /\ g[17])  \/ ((i=14) /\ g[18])  \/ ((i=15) /\ g[19])  \/ ((i=16) /\ g[20])  \/ ((i=17) /\ g[21])  \/ ((i=18) /\ g[22])  \/ ((i=19) /\ g[23])  \/ ((i=20) /\ g[24])  \/ ((i=21) /\ g[25])  \/ ((i=22) /\ g[26])  \/ ((i=23) /\ g[27])  \/ ((i=24) /\ g[28])  \/ ((i=25) /\ g[29])  \/ ((i=26) /\ g[30])  \/ ((i=27) /\ g[31]) )           
           ) \/
           (CMP32[AND32[f][b31]][b3] /\
            ( ((i=0) /\ g[3]) \/ ((i=1) /\ g[4]) \/ ((i=2) /\ g[5]) \/ ((i=3) /\ g[6]) \/ ((i=4) /\ g[7]) \/ ((i=5) /\ g[8])  \/ ((i=6) /\ g[9])  \/ ((i=7) /\ g[10])  \/ ((i=8) /\ g[11])  \/ ((i=9) /\ g[12])  \/ ((i=10) /\ g[13])  \/ ((i=11) /\ g[14])  \/ ((i=12) /\ g[15])  \/ ((i=13) /\ g[16])  \/ ((i=14) /\ g[17])  \/ ((i=15) /\ g[18])  \/ ((i=16) /\ g[19])  \/ ((i=17) /\ g[20])  \/ ((i=18) /\ g[21])  \/ ((i=19) /\ g[22])  \/ ((i=20) /\ g[23])  \/ ((i=21) /\ g[24])  \/ ((i=22) /\ g[25])  \/ ((i=23) /\ g[26])  \/ ((i=24) /\ g[27])  \/ ((i=25) /\ g[28])  \/ ((i=26) /\ g[29])  \/ ((i=27) /\ g[30])  \/ ((i=28) /\ g[31]) )
           ) \/
           (CMP32[AND32[f][b31]][b2] /\
            ( ((i=0) /\ g[2]) \/ ((i=1) /\ g[3]) \/ ((i=2) /\ g[4]) \/ ((i=3) /\ g[5]) \/ ((i=4) /\ g[6]) \/ ((i=5) /\ g[7])  \/ ((i=6) /\ g[8])  \/ ((i=7) /\ g[9])  \/ ((i=8) /\ g[10])  \/ ((i=9) /\ g[11])  \/ ((i=10) /\ g[12])  \/ ((i=11) /\ g[13])  \/ ((i=12) /\ g[14])  \/ ((i=13) /\ g[15])  \/ ((i=14) /\ g[16])  \/ ((i=15) /\ g[17])  \/ ((i=16) /\ g[18])  \/ ((i=17) /\ g[19])  \/ ((i=18) /\ g[20])  \/ ((i=19) /\ g[21])  \/ ((i=20) /\ g[22])  \/ ((i=21) /\ g[23])  \/ ((i=22) /\ g[24])  \/ ((i=23) /\ g[25])  \/ ((i=24) /\ g[26])  \/ ((i=25) /\ g[27])  \/ ((i=26) /\ g[28])  \/ ((i=27) /\ g[29])  \/ ((i=28) /\ g[30])  \/ ((i=29) /\ g[31]) )
           ) \/
           (CMP32[AND32[f][b31]][b1] /\
            ( ((i=0) /\ g[1]) \/ ((i=1) /\ g[2]) \/ ((i=2) /\ g[3]) \/ ((i=3) /\ g[4]) \/ ((i=4) /\ g[5]) \/ ((i=5) /\ g[6])  \/ ((i=6) /\ g[7])  \/ ((i=7) /\ g[8])  \/ ((i=8) /\ g[9])  \/ ((i=9) /\ g[10])  \/ ((i=10) /\ g[11])  \/ ((i=11) /\ g[12])  \/ ((i=12) /\ g[13])  \/ ((i=13) /\ g[14])  \/ ((i=14) /\ g[15])  \/ ((i=15) /\ g[16])  \/ ((i=16) /\ g[17])  \/ ((i=17) /\ g[18])  \/ ((i=18) /\ g[19])  \/ ((i=19) /\ g[20])  \/ ((i=20) /\ g[21])  \/ ((i=21) /\ g[22])  \/ ((i=22) /\ g[23])  \/ ((i=23) /\ g[24])  \/ ((i=24) /\ g[25])  \/ ((i=25) /\ g[26])  \/ ((i=26) /\ g[27])  \/ ((i=27) /\ g[28])  \/ ((i=28) /\ g[29])  \/ ((i=29) /\ g[30])  \/ ((i=30) /\ g[31]) )
           ) \/
           (CMP32[AND32[f][b31]][b0] /\ g[i]) 
       ]]]


xR12_15_22 == [i \in 0..63 |-> ((i=0) /\ xR12[15]) \/ ((i=1) /\ xR12[16]) \/ ((i=2) /\ xR12[17]) \/ ((i=3) /\ xR12[18]) \/ ((i=4) /\ xR12[19]) \/ ((i=5) /\ xR12[20]) \/ ((i=6) /\ xR12[21]) \/ ((i=7) /\ xR12[22])]

xR12_28_31 == [i \in 0..63 |-> ((i=0) /\ xR12[28]) \/ ((i=1) /\ xR12[29]) \/ ((i=2) /\ xR12[30]) \/ ((i=3) /\ xR12[31])]

xR12_32_39 == [i \in 0..63 |-> ((i=0) /\ xR12[32]) \/ ((i=1) /\ xR12[33]) \/ ((i=2) /\ xR12[34]) \/ ((i=3) /\ xR12[35]) \/ ((i=4) /\ xR12[36]) \/ ((i=5) /\ xR12[37]) \/ ((i=6) /\ xR12[38]) \/ ((i=7) /\ xR12[39])]

xR13_32_63 ==[i \in 0..63 |-> ((i=0) /\ xR13[32]) \/ ((i=1) /\ xR13[33]) \/ ((i=2) /\ xR13[34]) \/ ((i=3) /\ xR13[35]) \/ ((i=4) /\ xR13[36]) \/ ((i=5) /\ xR13[37]) \/ ((i=6) /\ xR13[38]) \/ ((i=7) /\ xR13[39]) \/ ((i=8) /\ xR13[40]) \/ ((i=9) /\ xR13[41]) \/ ((i=10) /\ xR13[42]) \/ ((i=11) /\ xR13[43]) \/ ((i=12) /\ xR13[44]) \/ ((i=13) /\ xR13[45]) \/ ((i=14) /\ xR13[46]) \/ ((i=15) /\ xR13[47]) \/ ((i=16) /\ xR13[48]) \/ ((i=17) /\ xR13[49]) \/ ((i=18) /\ xR13[50]) \/ ((i=19) /\ xR13[51]) \/ ((i=20) /\ xR13[52]) \/ ((i=21) /\ xR13[53]) \/ ((i=22) /\ xR13[54]) \/ ((i=23) /\ xR13[55]) \/ ((i=24) /\ xR13[56]) \/ ((i=25) /\ xR13[57]) \/ ((i=26) /\ xR13[58]) \/ ((i=27) /\ xR13[59]) \/ ((i=28) /\ xR13[60]) \/ ((i=29) /\ xR13[61]) \/ ((i=30) /\ xR13[62]) \/ ((i=31) /\ xR13[63]) ]

RCF_3_4 == [i \in 0..63 |-> ((i=0) /\ RCF[3]) \/ ((i=1) /\ RCF[4])]

zero_gte_xR12_15_22_lte_two == CMP64[xR12_15_22][b0] \/  CMP64[xR12_15_22][b1] \/  CMP64[xR12_15_22][b2]
  
   
(*
    xR11[0,32] := { (xR8==69) (xR13[0,32]) } +
    { [xR8==194] [(0 ≤ xR12[15,23] ≤ 2) (xR12[28,32]) + (xR12[15,23]==59) (xR12[32,40])] } +
    { (xR8==192) (xR12[15,23]==32) (xR13[32,64]) } +
    { ~(xR8==69) ~(xR8==192) ~(xR8==194) (xR11[0,32]) }
    
    xR11 := { (xR8==128) (RCF[3,5]==0) (RIP)mem } +
    { ~(xR8==128) (xR11) }
*) 
      
xR11 == [ i \in 0..63 |-> 

            (             
                \* xR11[0,31]
                ((i >= 0) /\ (i <= 31)) /\ 
                (
                    \* (xR8=69) /\ (xR13[0,31])
                    (CMP64[xR8][b69] /\ xR13[i]) \/
                    \* (xR8=194) /\ [(0 ≤ xR12[15,22] ≤ 2) /\ (xR12[28,31]) \/ (xR12[15,22]=59) /\ (xR12[32,39])] 
                    (CMP64[xR8][b194] /\ ( (zero_gte_xR12_15_22_lte_two /\ xR12_28_31[i]) \/ (CMP64[xR12_15_22][b59] /\ xR12_32_39[i]))) \/
                    \* (xR8=192) /\ (xR12[15,22]=32) /\ xR13[32,63]
                    (CMP64[xR8][b192] /\ CMP64[xR12_15_22][b32] /\ xR13_32_63[i]) \/
                    \* ~(xR8=69) /\ ~(xR8=192) /\ ~(xR8=194) /\ ~(xR8=128)  /\ xR11[0,31]
                    (~CMP64[xR8][b69] /\ ~CMP64[xR8][b194] /\ ~CMP64[xR8][b192] /\ ~CMP64[xR8][b128] /\ xR11[i]) 
                )
                
            ) \/  
            (
                \* xR11[0,63]
                ((i >= 0) /\ (i <= 63)) /\
                (   
                    \* (xR8=128) /\ (RCF[3,4]=0) /\ MEM[RIP] 
                    (CMP64[xR8][b128] /\ CMP64[RCF_3_4][b0] /\ MEM[BIN32[RIP]][i]) \/
                    \*  ~(xR8=69) /\ ~(xR8=192) /\ ~(xR8=194) /\ ~(xR8=128) /\ (xR11)
                    (~CMP64[xR8][b69] /\ ~CMP64[xR8][b194] /\ ~CMP64[xR8][b192] /\ ~CMP64[xR8][b128] /\ xR11[i])
                )
            )
            
       
       
        ]                        
                                          
                                                                             
                                       
(*                                     
                                       
                                       



INSTRUCTION_FORMAT_CORRECT =
    [ 
        [0 ≤ xR11[0,8] ≤ 2] [(xR11[23,27]==1) + (xR11[23,27]==2) + (xR11[23,27]==4) + (xR11[23,27]==8)] [xR11[59,64]==0] +
        [9 ≤ xR11[0,8] ≤ 10] [xR11[50,64]==0] + [17 ≤ xR11[0,8] ≤ 33] [xR11[18,64]==0] + [xR11[0,8]==44] [xR11[45,64]==0] +
        [51 ≤ xR11[0,8] ≤ 53] [xR11[13,64]==0] + [xR11[0,8]==59] [xR11[16,64]==0] + [60 ≤ xR11[0,8] ≤ 67] [xR11[40,64]==0] +
        [76 ≤ xR11[0,8] ≤ 78] [xR11[8,64]==0]
    ]

xR12[0,1] = { [xR8==192] [(xR12[15,23]==31) + (xR12[15,23]==33) + (xR12[15,23]==52) + (59 ≤ xR12[15,23] ≤ 60)]  } +
{ (xR8==68) } + { (xR8==69) } + { (xR8==72) } +
{ (xR8==65) (xR12[0,1]) }

xR12[1,2] = { [2 ≤ xR8 ≤ 31] [~(xR13[0,32]==0) + (xR12[2,3])] [xR12[2,3]] } +
{ (xR8==65) (xR12[0,1] + xR12[1,2]) } +
{ (33 ≤ xR8 ≤ 63) (xR12[2,3]) } +
{ [(xR8==66) | (xR8==32)] [xR12[1,2]] }

xR12[2,3] = { [xR8==32] [(xR13[(xR8)(31)]) (xR14[(xR8)(31)]) + (xR12[1,2]) ((xR13[(xR8) (31)]) + (xR14[(xR8) (31)]))] } +
{ [33 ≤ xR8 ≤ 63] [(xR13[(xR8)(31)]) (xR14[(xR8)(31)]) + (xR12[2,3]) ((xR13[(xR8) (31)]) + (xR14[(xR8) (31)]))] } +
{ [(xR8==64) | (2 ≤ xR8 ≤ 31) | (xR8==71)] [xR12[2,3]] }

xR12[3,4] = { (xR8==66) (xR13[31,32]) } +
{ (32 ≤ xR8 ≤ 64) (xR12[3,4]) }

xR12[4,5] = { (xR8==66) (xR14[31,32]) } +
(32 ≤ xR8 ≤ 64) (xR12[4,5])


xR12[5,6] = { (xR8==67) ~(xR11[0,32]==0) ~(xR15[0,32]==0) ~(xR11[0,32]==1) ~(xR15[0,32]==1) (xR11[31,32]) } +
{ ~(xR8==67) (xR12[5,6]) }

xR12[6,7] = { (xR8==67) ~(xR11[0,32]==0) ~(xR15[0,32]==0) ~(xR11[0,32]==1) ~(xR15[0,32]==1) (xR15[31,32]) } +
{ ~(xR8==67) (xR12[6,7]) }

xR12[7,8] = { (xR8==193) (xR12[63,64]) } +
{ [xR8==67] [~(xR11[0,32]==0) ~(xR11[0,32]==1) (xR15[0,32]==1) (xR11[31,32]) + ~(xR15[0,32]==0) ~(xR15[0,32]==1) (xR11[0,32]==1) (xR15[31,32])] } +
{ (xR8==73) (xR13[31,32]) } +
{ [xR8==66] ~[xR12[1,2]] [~(xR13[0,32]==0) (xR14[0,32]==0) (xR13[31,32]) + (xR13[0,32]==0) ~(xR14[0,32]==0) (xR14[31,32])] } +
{ [xR8==64] ~[(xR13[31,32]) ~(xR12[3,4]) ~(xR12[4,5]) + ~(xR13[31,32]) (xR12[3,4]) (xR12[4,5])] [xR13[31,32]] } +
{ ~(xR8==64) ~(xR8==66) ~(xR8==67) ~(xR8==73) ~(xR8==193) (xR12[7,8]) }

xR12[9,10] = { (xR8==193) (xR12[32,64]==0) } +
{ [xR8==67] [(xR11[0,32]==0) + (xR15[0,32]==0)] } +
{ (xR8==73) (xR13[0,32]==0) } +
{ (xR8==66) (xR13[0,32]==0) (xR14[0,32]==0) } +
{ [xR8==64] ~[(xR13[31,32]) ~(xR12[3,4]) ~(xR12[4,5]) + ~(xR13[31,32]) (xR12[3,4]) (xR12[4,5])] [xR13[31,32]] [xR13[0,32]==0] } +
{ ~(xR8==64) ~(xR8==66) ~(xR8==67) ~(xR8==73) ~(xR8==193) (xR12[9,10]) }



xR12[15,23] = { (xR8==160) (INSTRUCTION_FORMAT_CORRECT) (xR11[0,8]) } +
{ ~(xR8==160) (xR12[15,23]) }

xR12[23,28] = { (xR8==160) (INSTRUCTION_FORMAT_CORRECT) (xR11[8,13]) } +
{ ~(xR8==160) (xR12[23,28]) }


xR12[28,32] = { (xR8==160) (INSTRUCTION_FORMAT_CORRECT) (xR11[23,27]) } +
{ ~(xR8==160) (xR12[28,32]) }




xR12[32,64] = { [xR8==224] [(xR12[15,23]==0) + (xR12[15,23]==9)] [0 ≤ xR12[32,64] ≤ 0x2000000] [(0 ≤ xR12[32,64] ≤ 0x2000000) (xR12[32,64])]mem } +
{ (xR8==225) (xR12[15,23]==59) [xR12[32,64] (xR8==225) (xR12[15,23]==59)]mem } +
{ (xR8==160) (INSTRUCTION_FORMAT_CORRECT) (xR11[8,40]) } +
{ [xR8==167] [(xR11[0,8]==44) (xR11[13,45]) + (9 ≤ xR11[0,8] < 10) (xR11[18,50]) + (0 ≤ xR11[0,8] < 2) (xR11[27,59]) ] } +
{ (xR8==194) ~(xR12[15,23]==33) ~(xR12[15,23]==59) ~(xR12[15,23]==60) (xR13[0,32]) } +
{ [xR8==192] [(xR12[15,23]==24) (xR13[32,64]) (xR14[32,64]) + (xR12[15,23]==25) ((xR13[32,64]) + (xR14[32,64])) + (xR12[15,23]==26) ((xR13[32,64]) ~(xR14[32,64]) + ~(xR13[32,64]) (xR14[32,64])) + (xR12[15,23]==27) ((xR13[32,64]) << ((xR14[32,64]) (31))) + (xR12[15,23]==28) ((xR13[32,64]) >> ((xR14[32,64]) (31))) + (xR12[15,23]==29) ((xR13[32,64]) >>> ((xR14[32,64]) (31))) + (xR12[15,23]==51) ~(xR13[32,64])] }
{ [(xR8==196) + (xR8==197)] [xR13[0,32]] } +
{ ~(xR8==160) ~(xR8==167) ~(xR8==192) ~(xR8==194) ~(xR8==196) ~(xR8==197) ~(xR8==224) ~(xR8==225) (xR12[32,64]) }                                       


xR13[0,1] := { (xR8=256) \/ (xR8=257) } \/
(xR8=165)  /\ 0
(xR8=163)  /\ 0
(xR8=161)  /\ 0


xR13[1,6] := { [(xR8=256) \/ (xR8=257)]  /\ xR12[23,28] } \/
{ (xR8=165) /\ xR11[18,23] } \/
{ (xR8=163) /\ xR11[13,18] } \/
{ (xR8=161) /\ xR11[8,13] } \/

xR13[0,32] := { [(xR8=192) /\ ((xR12[15,23]=52) \/ (xR12[15,23]=53) \/ (xR12[15,23]=59) \/ (xR12[15,23]=60) \/ (xR12[15,23]=76))] /\ xR14[32,64] } \/
{ [(xR8=192) /\ ((xR12[15,23]=30) \/ (xR12[15,23]=31) \/ (xR12[15,23]=33))] /\ xR13[32,64] } \/
{ [(xR8=192) /\ ((xR12[15,23]=0) \/ (xR12[15,23]=1) \/ (xR12[15,23]=2) \/ (xR12[15,23]=9) \/ (xR12[15,23]=10))] /\ xR12[32,64] } \/
{ (xR8=128) /\ RIP}  \/
{ (xR8=67) /\ (xR11[0,32]=1) /\ ¬(xR15[0,32]=0) /\ ¬(xR15[0,32]=1) /\ (xR15[0,32]) } \/
{ (xR8=67) /\ (xR15[0,32]=1) /\ ¬(xR11[0,32]=0) /\ ¬(xR11[0,32]=1) /\ (xR11[0,32]) } \/
{ (xR8=67) /\ [(xR11[0,32]=0) \/ (xR15[0,32]=0)] /\ 0 } \/
{ (xR8=68) /\ [(xR12[5,6]) \/ (¬xR12[5,6] /\ xR12[6,7])] /\ 0 } \/
{ (xR8=69) /\ xR12[6,7] /\ 0 } \/
{ (xR8=1) /\ xR15[0,1] /\ xR11[0,32] } \/
{ (xR8=1) /\ ¬xR15[0,1] /\ xR15[1,2] /\ (xR11[0,32]<<1) } \/
{ (xR8=1) /\ ¬xR15[0,1] /\ ¬xR15[1,2] /\ 0 } \/
{ (2 ≤ xR8 ≤ 31) /\ ¬xR15[xR8] /\ 0 } \/
{ (2 ≤ xR8 ≤ 31) /\ xR15[xR8] /\ (xR11[0,32]<< xR8) } \/
{ (xR8=72) /\ 0 } \/
{ (xR8=66) /\ (xR13[0,32]=0) /\ (xR14[0,32]=0) /\ xR12[1,2] } \/
{ (xR8=66) /\ (xR13[0,32]=0) /\ ¬(xR14[0,32]=0) /\ ¬xR12[1,2] /\ xR14[0,32] } \/
{ (xR8=97) /\ [
((xR13[1,6]=0) /\ RIP) \/
((xR13[1,6]=1) /\ RSP) \/
((xR13[1,6]=2) /\ RBP) \/
((xR13[1,6]=3) /\ RCF) \/
((xR13[1,6]=4) /\ R4) \/
((xR13[1,6]=5) /\ R5) \/
((xR13[1,6]=6) /\ R6) \/
((xR13[1,6]=7) /\ R7) \/
((xR13[1,6]=8) /\ R8) \/
((xR13[1,6]=9) /\ R9) \/
((xR13[1,6]=10) /\ R10) \/
((xR13[1,6]=11) /\ R11) \/
((xR13[1,6]=12) /\ R12) \/
((xR13[1,6]=13) /\ R13) \/
((xR13[1,6]=14) /\ R14) \/
((xR13[1,6]=15) /\ R15) \/
((xR13[1,6]=16) /\ R16) \/
((xR13[1,6]=17) /\ R17) \/
((xR13[1,6]=18) /\ R18) \/
((xR13[1,6]=19) /\ R19) \/
((xR13[1,6]=20) /\ R20) \/
((xR13[1,6]=21) /\ R21) \/
((xR13[1,6]=22) /\ R22) \/
((xR13[1,6]=23) /\ R23) \/
((xR13[1,6]=24) /\ R24) \/
((xR13[1,6]=25) /\ R25) \/
((xR13[1,6]=26) /\ R26) \/
((xR13[1,6]=27) /\ R27) \/
((xR13[1,6]=28) /\ R28) \/
((xR13[1,6]=29) /\ R29) \/
((xR13[1,6]=30) /\ R30) \/
((xR13[1,6]=31) /\ R31) ]}

xR13[0] := { (xR8=32) /\ [(¬xR12[1] /\ ¬xR13[0] /\ xR14[0]) \/ (¬xR12[1] /\ xR13[0] /\ ¬xR14[0]) \/
(xR12[1] /\ ¬xR13[0] /\ ¬xR14[0]) \/  (xR12[1] /\ xR13[0] /\ xR14[0])] }

xR13[xR8 /\ 31] := { (33 ≤ xR8 ≤ 63) /\ 
[(¬xR12[2] /\ ¬xR13[xR8 /\ 31] /\ xR14[xR8 /\ 31]) \/ 
(¬xR12[2] /\ xR13[xR8 /\ 31] /\ ¬xR14[xR8 /\ 31]) \/
(xR12[2] /\ ¬xR13[xR8 /\ 31] /\ ¬xR14[xR8 /\ 31]) \/  
(xR12[2] /\ xR13[xR8 /\ 31] /\ xR14[xR8 /\ 31])] }

xR13[32,64] := { [(xR8=194) /\ ((xR12[15,23]=59) \/ (xR12[15,23]=60))] /\ xR13[0,32] }
{ (xR8=162) /\ xR13[0,32] }


xR14[0,32] := { (xR8=256) /\ [(xR12[15,23]=0) \/ (xR12[15,23]=2) \/ 
(xR12[15,23]=9) \/ (24 ≤ xR12[15,23] ≤ 32) \/  
(xR12[15,23]=44) \/ (xR12[15,23]=51)] /\ xR12[32,64] } \/
{ (xR8=256) /\ (17 ≤ xR12[15,23] ≤ 23) /\ xR14[32,64] } \/
{ (xR8=257) /\ (xR12[15,23]=53) /\ xR15[32,64] } \/
{ (xR8=192) /\ [ (0 ≤ xR12[15,23] ≤ 2) \/ (xR12[15,23]=9) \/ (xR12[15,23]=10)
 \/ (xR12[15,23]=30)  \/ (xR12[15,23]=31) \/ (xR12[15,23]=33) ] /\ xR14[32,64] } \/
{ (xR8=192) /\ [ (xR12[15,23]=52) \/ (xR12[15,23]=53) \/ (xR12[15,23]=59)  
\/ (xR12[15,23]=60) \/ (xR12[15,23]=76) ] /\ 4 } \/  
{ (xR8=195) /\ (0 ≤ xR12[15,23] ≤ 2) /\ xR12[32,64] } \/
{ (xR8=195) /\ (xR12[15,23]=59) /\ INTERUPT_TABLE } \/
{ (xR8=128) /\ 8 } \/
{ (xR8=68) /\ ¬xR12[5,6] /\ xR12[6,7] /\ xR15[0,32] } \/
{ (xR8=68) /\ xR12[5,6] /\ xR11[0,32] } \/
{ (xR8=69) /\ xR12[6,7] /\ xR15[0,32] } \/
{ (xR8=1) /\ xR15[0] /\ xR15[1] /\ (xR11[0,32]<<1) } \/
{ (2 ≤ xR8 ≤ 31) /\ [ ¬(xR13[0,32]=0) \/ xR12[2] ] /\ xR15[xR8] /\ (xR11[0,32]<<xR8) } \/
{ (2 ≤ xR8 ≤ 31) /\ [ ¬(xR13[0,32]=0) \/ xR12[2] ] /\ ¬xR15[xR8] /\ 0 } \/
{ (xR8=71) /\ ¬xR12[2] /\ ¬xR13[31] /\ [ (xR12[5] /\ ¬xR12[6]) \/ (¬xR12[5] /\ xR12[6]) ] /\ xR13[0,32] } \/
{ (xR8=65) /\ [ (xR14[0,32] /\ ¬xR12[0]) \/ (¬xR14[0,32] /\ xR12[0]) ] } \/

xR14[32,64] := { (xR8=164) /\ xR13[0,32] } \/
{ (xR8=167) /\ [ (xR11[0,8]=52) \/ (xR11[0,8]=53) \/ (xR11[0,8]=59) \/
(xR11[0,8]=60) \/ (xR11[0,8]=76) ] /\ RSP } \/

xR15[0,32] := { (xR8=192) /\ (xR12[15,23]=32) /\ xR14[32,64] } \/
{ (xR8=194) /\ (xR12[15,23]=59) /\ 4 } \/
{ (xR8=194) /\ [ (0 ≤ xR12[15,23] ≤ 2) ] /\ xR15[32,64] } \/
{ (xR8=70) /\ xR13[0,32] } \/

xR15[32,64] := { (xR8=224) /\ [ (xR12[15,23]=53) \/ (xR12[15,23]=76) ] /\ 
(STACK_MIN ≤ xR12[32,64] ≤ STACK_MAX) /\ MEM[xR12[32,64]] } \/
{ (xR8=166) /\ xR13[0,32] } \/
{ (xR8=167) /\ [ (xR12[15,23]=52) \/ (xR12[15,23]=53) \/
(xR12[15,23]=59) \/ (xR12[15,23]=60) \/ (xR12[15,23]=76) ] /\ RIP } \/

RIP := { (xR8=256) /\ [ (xR12[15,23]=63) \/ (xR12[15,23]=65) \/ (xR12[15,23]=66) ] 
/\ RCF[2] /\ xR12[32,64] } \/
{ (xR8=256) /\ [ (xR12[15,23]=62) \/ (xR12[15,23]=63) \/ (xR12[15,23]=67) ] 
/\ RCF[0] /\ xR12[32,64]  } \/
{ (xR8=256) /\ [ (xR12[15,23]=64) \/ (xR12[15,23]=65) \/ (xR12[15,23]=67) ] 
/\ ¬RCF[0] /\ ¬RCF[2] /\ xR12[32,64] } \/
{ (xR8=257) /\ (59 ≤ xR12[15,23] ≤ 61) /\ xR12[32,64] } \/
{ (xR8=257) /\ (xR12[15,23]=76) /\ xR15[32,64] } \/
{ (xR8=98) /\ [ [ (xR13[1,6]=0) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=0) /\ RIP ] ] } \/
{ (xR8=129) /\ xR13[0,32] } \/

RSP := { (xR8=256) /\ [ (xR12[15,23]=52) \/ (xR12[15,23]=53) \/ (xR12[15,23]=76) ] 
/\ xR12[32,64] } \/
{ (xR8=256) /\ [ (xR12[15,23]=59) \/ (xR12[15,23]=60) ] /\ xR13[32,64] } \/
{ (xR8=98) /\ [ [ (xR13[1,6]=1) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=1) /\ RSP ] ] } \/

RBP := { (xR8=98) /\ [ [ (xR13[1,6]=2) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=2) /\ RBP ] ] } \/

RCF := { (xR8=98) /\ [ [ (xR13[1,6]=3) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=3) /\ RCF ] ] } \/

RCF[3,5] := { (xR8=224) /\ [ (xR12[15,23]=0) \/ (xR12[15,23]=1) \/ (xR12[15,23]=9) \/
(xR12[15,23]=10) ] /\ ¬(MEM_MIN ≤ xR12[32,64] ≤ MEM_MAX) /\ 3 } \/
{ (xR8=224) /\ [ (xR12[15,23]=53) \/ (xR12[15,23]=76) ] 
/\ ¬(STACK_MIN ≤ xR12[32,64] ≤ STACK_MAX) /\ 3 } \/
{ (xR8=224) /\ [ (xR12[15,23]=52) \/ (xR12[15,23]=59) \/ (xR12[15,23]=60) ] 
/\ ¬(STACK_MIN ≤ xR14[32,64] ≤ STACK_MAX) /\ 3 } \/
{ (xR8=258) /\ 0 } \/
{ (xR8=64) /\ [ (xR13[31] /\ ¬xR12[3] /\ ¬xR12[4]) \/ (¬xR13[31] /\ xR12[3] /\ xR12[4]) ] /\ 1 } \/
{ (xR8=71) /\ (xR12[2] \/ xR13[31]) /\ 1 } \/
{ (xR8=160) /\ ~INSTRUCTION_FORMAT_CORRECT /\ 2 } \/
{ (xR8=161) /\ (xR11[0,8]=77) /\ 0 } \/


RCF[0] := { (xR8=258) /\ [ (24 ≤ xR12[15,23] ≤ 33) \/ (xR12[15,23]=51) ] /\ xR12[7] } \/
{ (xR8=258) /\ [ ¬(24 ≤ xR12[15,23] ≤ 33) /\ ¬(xR12[15,23]=51) ] /\ 0 } \/

RCF[2] := { (xR8=258) /\ [ (24 ≤ xR12[15,23] ≤ 33) \/ (xR12[15,23]=51) ] /\ xR12[9] } \/
{ (xR8=258) /\ [ ¬(24 ≤ xR12[15,23] ≤ 33) /\ ¬(xR12[15,23]=51) ] /\ 0 } \/

R4 := { (xR8=98) /\ [ [ (xR13[1,6]=4) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=4) /\ R4 ] ] } \/

R5 := { (xR8=98) /\ [ [ (xR13[1,6]=5) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=5) /\ R5 ] ] } \/

R6 := { (xR8=98) /\ [ [ (xR13[1,6]=6) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=6) /\ R6 ] ] } \/

R7 := { (xR8=98) /\ [ [ (xR13[1,6]=7) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=7) /\ R7 ] ] } \/

R8 := { (xR8=98) /\ [ [ (xR13[1,6]=8) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=8) /\ R8 ] ] } \/

R9 := { (xR8=98) /\ [ [ (xR13[1,6]=9) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=9) /\ R9 ] ] } \/

R10 := { (xR8=98) /\ [ [ (xR13[1,6]=10) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=10) /\ R10 ] ] } \/

R11 := { (xR8=98) /\ [ [ (xR13[1,6]=11) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=11) /\ R11 ] ] } \/

R12 := { (xR8=98) /\ [ [ (xR13[1,6]=12) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=12) /\ R12 ] ] } \/

R13 := { (xR8=98) /\ [ [ (xR13[1,6]=13) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=13) /\ R13 ] ] } \/

R14 := { (xR8=98) /\ [ [ (xR13[1,6]=14) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=14) /\ R14 ] ] } \/

R15 := { (xR8=98) /\ [ [ (xR13[1,6]=15) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=15) /\ R15 ] ] } \/

R16 := { (xR8=98) /\ [ [ (xR13[1,6]=16) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=16) /\ R16 ] ] } \/

R17 := { (xR8=98) /\ [ [ (xR13[1,6]=17) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=17) /\ R17 ] ] } \/

R18 := { (xR8=98) /\ [ [ (xR13[1,6]=18) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=18) /\ R18 ] ] } \/

R19 := { (xR8=98) /\ [ [ (xR13[1,6]=19) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=19) /\ R19 ] ] } \/

R20 := { (xR8=98) /\ [ [ (xR13[1,6]=20) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=20) /\ R20 ] ] } \/

R21 := { (xR8=98) /\ [ [ (xR13[1,6]=21) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=21) /\ R21 ] ] } \/

R22 := { (xR8=98) /\ [ [ (xR13[1,6]=22) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=22) /\ R22 ] ] } \/

R23 := { (xR8=98) /\ [ [ (xR13[1,6]=23) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=23) /\ R23 ] ] } \/

R24 := { (xR8=98) /\ [ [ (xR13[1,6]=24) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=24) /\ R24 ] ] } \/

R25 := { (xR8=98) /\ [ [ (xR13[1,6]=25) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=25) /\ R25 ] ] } \/

R26 := { (xR8=98) /\ [ [ (xR13[1,6]=26) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=26) /\ R26 ] ] } \/

R27 := { (xR8=98) /\ [ [ (xR13[1,6]=27) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=27) /\ R27 ] ] } \/

R28 := { (xR8=98) /\ [ [ (xR13[1,6]=28) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=28) /\ R28 ] ] } \/

R29 := { (xR8=98) /\ [ [ (xR13[1,6]=29) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=29) /\ R29 ] ] } \/

R30 := { (xR8=98) /\ [ [ (xR13[1,6]=30) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=30) /\ R30 ] ] } \/

R31 := { (xR8=98) /\ [ [ (xR13[1,6]=31) /\ xR14[0,32] ] \/ [ ¬(xR13[1,6]=31) /\ R31 ] ] } \/

MEMORY[xR14[32,64]] := { (xR8=224) /\ [ (xR12[15,23]=59) \/ (xR12[15,23]=60) ] 
/\ (STACK_MIN ≤ xR14[32,64] ≤ STACK_MAX) /\ xR15[32,64] } \/

MEMORY[xR12[32,64]] := { (xR8=224) /\ [ (xR12[15,23]=1) \/ (xR12[15,23]=10) ] 
/\ (MEM_MIN ≤ xR12[32,64] ≤ MEM_MAX) /\ xR13[32,64] } \/

MEMORY[xR14[32,64]] := { (xR8=224) /\ (xR12[15,23]=52) /\ (STACK_MIN ≤ xR14[32,64] ≤ STACK_MAX) /\ xR13[32,64] } \/

*)                                       
                                      
                                       
                                       

THEOREM ANDN_CORRECT==
    \A f,g \in BVN : \A i \in 0..N : 
    ANDN[f][g][i] <=> f[i] /\ g[i]
PROOF
    <1>1 TAKE f,g \in BVN
    <1>2 TAKE i \in 0..N
    <1>3 ANDN[f][g][i] <=> f[i] /\ g[i]
        BY DEF BVN, ANDN
    <1> QED BY <1>3
    
THEOREM ORN_CORRECT==
    \A f,g \in BVN : \A i \in 0..N : 
    ORN[f][g][i] <=> f[i] \/ g[i]
PROOF
    <1>1 TAKE f,g \in BVN
    <1>2 TAKE i \in 0..N
    <1>3 ORN[f][g][i] <=> f[i] \/ g[i]
        BY DEF BVN, ORN
    <1> QED BY <1>3
    
THEOREM EXPANDN_CORRECT ==
    \A b \in {TRUE,FALSE} : \A i \in 0..N : 
    EXPANDN[b][i] <=> b
PROOF
    <1>1 TAKE b \in {TRUE,FALSE}
    <1>2 TAKE i \in 0..N
    <1>3 EXPANDN[b][i] <=> b
        BY  DEF EXPANDN
    <1> QED BY <1>3

THEOREM NOT_XORN_EQ ==
    \A f,g \in BVN : \A i \in 0..N :
    ~XORN[f][g][i] <=> f[i]=g[i]
PROOF
    <1>1 TAKE f,g \in BVN
    <1>2 TAKE i \in 0..N
    <1>3 ASSUME f[i] /= g[i] PROVE XORN[f][g][i]
        <2>1 f[i] \in {TRUE,FALSE}
            BY DEF BVN
        <2>2 g[i] \in {TRUE,FALSE}
            BY DEF BVN
        <2>3 (f[i] /= g[i]) => ((f[i] /\ ~g[i]) \/ (~f[i] /\ g[i]))
            BY <2>1, <2>2
        <2>4 ((f[i] /\ ~g[i]) \/ (~f[i] /\ g[i]))
            BY <1>3, <2>3
        <2>5 XORN[f][g][i]
            BY <2>4 DEF XORN
        <2>6 QED BY <2>5
    <1>4 ASSUME XORN[f][g][i] PROVE (f[i] /= g[i])
        <2>7 ((f[i] /\ ~g[i]) \/ (~f[i] /\ g[i]))
            BY <1>4 DEF XORN
        <2>8 f[i] /= g[i]
            BY <2>7
        <2>9 QED BY <2>8
    <1> QED BY <1>3, <1>4
    
THEOREM CMP32_F_EQ_G ==
    ASSUME N=31 PROVE
    \A f,g \in BVN :
    CMP32[f][g] <=> f=g
PROOF
    <1>1 TAKE f,g \in BVN
    <1>2 ASSUME CMP32[f][g] PROVE f=g
        <2>1 
             (~XORN[f][g][0] /\ ~XORN[f][g][1]  /\ ~XORN[f][g][2]  /\ 
             ~XORN[f][g][3]  /\ ~XORN[f][g][4]  /\ ~XORN[f][g][5]  /\ 
             ~XORN[f][g][6]  /\ ~XORN[f][g][7]  /\ ~XORN[f][g][8]  /\
             ~XORN[f][g][9]  /\ ~XORN[f][g][10] /\ ~XORN[f][g][11] /\
             ~XORN[f][g][12] /\ ~XORN[f][g][13] /\ ~XORN[f][g][14] /\
             ~XORN[f][g][15] /\ ~XORN[f][g][16] /\ ~XORN[f][g][17] /\
             ~XORN[f][g][18] /\ ~XORN[f][g][19] /\ ~XORN[f][g][20] /\
             ~XORN[f][g][21] /\ ~XORN[f][g][22] /\ ~XORN[f][g][23] /\
             ~XORN[f][g][24] /\ ~XORN[f][g][25] /\ ~XORN[f][g][26] /\
             ~XORN[f][g][27] /\ ~XORN[f][g][28] /\ ~XORN[f][g][29] /\
             ~XORN[f][g][30] /\ ~XORN[f][g][31]) => 
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31])        
             BY NOT_XORN_EQ
        <2>2  
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31])  =>
              (f=g)
            BY DEF BVN
        <2>3 f=g
            BY <1>2,<2>1,<2>2 DEF CMP32
        <2>4 QED BY <2>3
    <1>3 ASSUME f=g PROVE CMP32[f][g]
        <2>5 (f=g) => 
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31])
            OBVIOUS
        <2>6 
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31]) =>
             (~XORN[f][g][0] /\ ~XORN[f][g][1]  /\ ~XORN[f][g][2]  /\ 
             ~XORN[f][g][3]  /\ ~XORN[f][g][4]  /\ ~XORN[f][g][5]  /\ 
             ~XORN[f][g][6]  /\ ~XORN[f][g][7]  /\ ~XORN[f][g][8]  /\
             ~XORN[f][g][9]  /\ ~XORN[f][g][10] /\ ~XORN[f][g][11] /\
             ~XORN[f][g][12] /\ ~XORN[f][g][13] /\ ~XORN[f][g][14] /\
             ~XORN[f][g][15] /\ ~XORN[f][g][16] /\ ~XORN[f][g][17] /\
             ~XORN[f][g][18] /\ ~XORN[f][g][19] /\ ~XORN[f][g][20] /\
             ~XORN[f][g][21] /\ ~XORN[f][g][22] /\ ~XORN[f][g][23] /\
             ~XORN[f][g][24] /\ ~XORN[f][g][25] /\ ~XORN[f][g][26] /\
             ~XORN[f][g][27] /\ ~XORN[f][g][28] /\ ~XORN[f][g][29] /\
             ~XORN[f][g][30] /\ ~XORN[f][g][31])
            BY NOT_XORN_EQ
        <2>7 CMP32[f][g]
            BY <1>3,<2>5,<2>6 DEF CMP32
        <2>8 QED BY <2>7  
    <1> QED BY <1>2,<1>3




THEOREM CMP64_F_EQ_G ==
    ASSUME N=63 PROVE
    \A f,g \in BVN :
    CMP64[f][g] <=> f=g
PROOF
    <1>1 TAKE f,g \in BVN
    <1>2 ASSUME CMP64[f][g] PROVE f=g
        <2>1 
             (~XORN[f][g][0]  /\ ~XORN[f][g][1]  /\ ~XORN[f][g][2]  /\ 
              ~XORN[f][g][3]  /\ ~XORN[f][g][4]  /\ ~XORN[f][g][5]  /\ 
              ~XORN[f][g][6]  /\ ~XORN[f][g][7]  /\ ~XORN[f][g][8]  /\
              ~XORN[f][g][9]  /\ ~XORN[f][g][10] /\ ~XORN[f][g][11] /\
              ~XORN[f][g][12] /\ ~XORN[f][g][13] /\ ~XORN[f][g][14] /\
              ~XORN[f][g][15] /\ ~XORN[f][g][16] /\ ~XORN[f][g][17] /\
              ~XORN[f][g][18] /\ ~XORN[f][g][19] /\ ~XORN[f][g][20] /\
              ~XORN[f][g][21] /\ ~XORN[f][g][22] /\ ~XORN[f][g][23] /\
              ~XORN[f][g][24] /\ ~XORN[f][g][25] /\ ~XORN[f][g][26] /\
              ~XORN[f][g][27] /\ ~XORN[f][g][28] /\ ~XORN[f][g][29] /\
              ~XORN[f][g][30] /\ ~XORN[f][g][31] /\
              ~XORN[f][g][32] /\ ~XORN[f][g][33] /\ ~XORN[f][g][34] /\ 
              ~XORN[f][g][35] /\ ~XORN[f][g][36] /\ ~XORN[f][g][37] /\ 
              ~XORN[f][g][38] /\ ~XORN[f][g][39] /\ ~XORN[f][g][40] /\
              ~XORN[f][g][41] /\ ~XORN[f][g][42] /\ ~XORN[f][g][43] /\
              ~XORN[f][g][44] /\ ~XORN[f][g][45] /\ ~XORN[f][g][46] /\
              ~XORN[f][g][47] /\ ~XORN[f][g][48] /\ ~XORN[f][g][49] /\
              ~XORN[f][g][50] /\ ~XORN[f][g][51] /\ ~XORN[f][g][52] /\
              ~XORN[f][g][53] /\ ~XORN[f][g][54] /\ ~XORN[f][g][55] /\
              ~XORN[f][g][56] /\ ~XORN[f][g][57] /\ ~XORN[f][g][58] /\
              ~XORN[f][g][59] /\ ~XORN[f][g][60] /\ ~XORN[f][g][61] /\
              ~XORN[f][g][62] /\ ~XORN[f][g][63]) => 
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31] /\
              f[32]=g[32] /\ f[33]=g[33] /\ f[34]=g[34] /\ f[35]=g[35] /\
              f[36]=g[36] /\ f[37]=g[37] /\ f[38]=g[38] /\ f[39]=g[39] /\
              f[40]=g[40] /\ f[41]=g[41] /\ f[42]=g[42] /\ f[43]=g[43] /\
              f[44]=g[44] /\ f[45]=g[45] /\ f[46]=g[46] /\ f[47]=g[47] /\
              f[48]=g[48] /\ f[49]=g[49] /\ f[50]=g[50] /\ f[51]=g[51] /\
              f[52]=g[52] /\ f[53]=g[53] /\ f[54]=g[54] /\ f[55]=g[55] /\
              f[56]=g[56] /\ f[57]=g[57] /\ f[58]=g[58] /\ f[59]=g[59] /\
              f[60]=g[60] /\ f[61]=g[61] /\ f[62]=g[62] /\ f[63]=g[63])                     
             BY NOT_XORN_EQ
        <2>2  
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31] /\
              f[32]=g[32] /\ f[33]=g[33] /\ f[34]=g[34] /\ f[35]=g[35] /\
              f[36]=g[36] /\ f[37]=g[37] /\ f[38]=g[38] /\ f[39]=g[39] /\
              f[40]=g[40] /\ f[41]=g[41] /\ f[42]=g[42] /\ f[43]=g[43] /\
              f[44]=g[44] /\ f[45]=g[45] /\ f[46]=g[46] /\ f[47]=g[47] /\
              f[48]=g[48] /\ f[49]=g[49] /\ f[50]=g[50] /\ f[51]=g[51] /\
              f[52]=g[52] /\ f[53]=g[53] /\ f[54]=g[54] /\ f[55]=g[55] /\
              f[56]=g[56] /\ f[57]=g[57] /\ f[58]=g[58] /\ f[59]=g[59] /\
              f[60]=g[60] /\ f[61]=g[61] /\ f[62]=g[62] /\ f[63]=g[63])  =>
              (f=g)
            BY DEF BVN
        <2>3 f=g
            BY <1>2,<2>1,<2>2 DEF CMP64
        <2>4 QED BY <2>3
    <1>3 ASSUME f=g PROVE CMP64[f][g]
        <2>5 (f=g) => 
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31] /\
              f[32]=g[32] /\ f[33]=g[33] /\ f[34]=g[34] /\ f[35]=g[35] /\
              f[36]=g[36] /\ f[37]=g[37] /\ f[38]=g[38] /\ f[39]=g[39] /\
              f[40]=g[40] /\ f[41]=g[41] /\ f[42]=g[42] /\ f[43]=g[43] /\
              f[44]=g[44] /\ f[45]=g[45] /\ f[46]=g[46] /\ f[47]=g[47] /\
              f[48]=g[48] /\ f[49]=g[49] /\ f[50]=g[50] /\ f[51]=g[51] /\
              f[52]=g[52] /\ f[53]=g[53] /\ f[54]=g[54] /\ f[55]=g[55] /\
              f[56]=g[56] /\ f[57]=g[57] /\ f[58]=g[58] /\ f[59]=g[59] /\
              f[60]=g[60] /\ f[61]=g[61] /\ f[62]=g[62] /\ f[63]=g[63])
            OBVIOUS
        <2>6 
             (f[0]=g[0]   /\ f[1]=g[1]   /\ f[2]=g[2]   /\ f[3]=g[3]   /\
              f[4]=g[4]   /\ f[5]=g[5]   /\ f[6]=g[6]   /\ f[7]=g[7]   /\
              f[8]=g[8]   /\ f[9]=g[9]   /\ f[10]=g[10] /\ f[11]=g[11] /\
              f[12]=g[12] /\ f[13]=g[13] /\ f[14]=g[14] /\ f[15]=g[15] /\
              f[16]=g[16] /\ f[17]=g[17] /\ f[18]=g[18] /\ f[19]=g[19] /\
              f[20]=g[20] /\ f[21]=g[21] /\ f[22]=g[22] /\ f[23]=g[23] /\
              f[24]=g[24] /\ f[25]=g[25] /\ f[26]=g[26] /\ f[27]=g[27] /\
              f[28]=g[28] /\ f[29]=g[29] /\ f[30]=g[30] /\ f[31]=g[31] /\
              f[32]=g[32] /\ f[33]=g[33] /\ f[34]=g[34] /\ f[35]=g[35] /\
              f[36]=g[36] /\ f[37]=g[37] /\ f[38]=g[38] /\ f[39]=g[39] /\
              f[40]=g[40] /\ f[41]=g[41] /\ f[42]=g[42] /\ f[43]=g[43] /\
              f[44]=g[44] /\ f[45]=g[45] /\ f[46]=g[46] /\ f[47]=g[47] /\
              f[48]=g[48] /\ f[49]=g[49] /\ f[50]=g[50] /\ f[51]=g[51] /\
              f[52]=g[52] /\ f[53]=g[53] /\ f[54]=g[54] /\ f[55]=g[55] /\
              f[56]=g[56] /\ f[57]=g[57] /\ f[58]=g[58] /\ f[59]=g[59] /\
              f[60]=g[60] /\ f[61]=g[61] /\ f[62]=g[62] /\ f[63]=g[63]) =>
             (~XORN[f][g][0]  /\ ~XORN[f][g][1]  /\ ~XORN[f][g][2]  /\ 
              ~XORN[f][g][3]  /\ ~XORN[f][g][4]  /\ ~XORN[f][g][5]  /\ 
              ~XORN[f][g][6]  /\ ~XORN[f][g][7]  /\ ~XORN[f][g][8]  /\
              ~XORN[f][g][9]  /\ ~XORN[f][g][10] /\ ~XORN[f][g][11] /\
              ~XORN[f][g][12] /\ ~XORN[f][g][13] /\ ~XORN[f][g][14] /\
              ~XORN[f][g][15] /\ ~XORN[f][g][16] /\ ~XORN[f][g][17] /\
              ~XORN[f][g][18] /\ ~XORN[f][g][19] /\ ~XORN[f][g][20] /\
              ~XORN[f][g][21] /\ ~XORN[f][g][22] /\ ~XORN[f][g][23] /\
              ~XORN[f][g][24] /\ ~XORN[f][g][25] /\ ~XORN[f][g][26] /\
              ~XORN[f][g][27] /\ ~XORN[f][g][28] /\ ~XORN[f][g][29] /\
              ~XORN[f][g][30] /\ ~XORN[f][g][31] /\
              ~XORN[f][g][32] /\ ~XORN[f][g][33] /\ ~XORN[f][g][34] /\ 
              ~XORN[f][g][35] /\ ~XORN[f][g][36] /\ ~XORN[f][g][37] /\ 
              ~XORN[f][g][38] /\ ~XORN[f][g][39] /\ ~XORN[f][g][40] /\
              ~XORN[f][g][41] /\ ~XORN[f][g][42] /\ ~XORN[f][g][43] /\
              ~XORN[f][g][44] /\ ~XORN[f][g][45] /\ ~XORN[f][g][46] /\
              ~XORN[f][g][47] /\ ~XORN[f][g][48] /\ ~XORN[f][g][49] /\
              ~XORN[f][g][50] /\ ~XORN[f][g][51] /\ ~XORN[f][g][52] /\
              ~XORN[f][g][53] /\ ~XORN[f][g][54] /\ ~XORN[f][g][55] /\
              ~XORN[f][g][56] /\ ~XORN[f][g][57] /\ ~XORN[f][g][58] /\
              ~XORN[f][g][59] /\ ~XORN[f][g][60] /\ ~XORN[f][g][61] /\
              ~XORN[f][g][62] /\ ~XORN[f][g][63])
            BY NOT_XORN_EQ
        <2>7 CMP64[f][g]
            BY <1>3,<2>5,<2>6 DEF CMP64
        <2>8 QED BY <2>7  
    <1> QED BY <1>2,<1>3
   

=============================================================================
\* Modification History
\* Last modified Thu Dec 15 01:28:25 CST 2022 by mjhomefolder
\* Created Thu Nov 03 00:11:52 CDT 2022 by mjhomefolder
